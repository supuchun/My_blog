1、到底什么是Java框架
    Java框架就是一些类和接口的集合，通过这些类和接口协调来完成一系列的程序实现。框架又叫做开发中的半成品，它不能提供整个WEB应用程序的所有东西，
    但是有了框架，我们就可以集中精力进行业务逻辑的开发而不用去关心它的技术实现以及一些辅助的业务逻辑。说白了Java框架就是封装好方便程序员操作的类，使项目的开发更简单，维护起来也更容易。
2、框架与设计模式有有什么区别
     设计模式，是解决某一类问题的方法，把解决问题的方法总结为一种理论，比如为了解决有些对象只能用一个特定对象的问题，我们使用单例模式；为了解决使用算法容易发生变化的问题，我们使用策略模式。
     每个模式都描述了一个在我们的环境中不断出现的问题，然后描述了该问题的解决方案的核心。通过这种方式，你可以无数次地使用那些已有的解决方案，无需在重复相同的工作。
     框架，即Framework。其实是某种应用的半成品，是一组组件，但是这个东西复用性特别的强，可以让广大程序开发人员完成自己的系统。简单说就是使用别人搭好的舞台，你来做表演。而且，框架一般是成熟的，不断升级的软件。
     设计模式是对在某种环境中反复出现的问题以及解决该问题的方案的描述，它比框架更抽象；框架可以用代码表示，也能直接执行或复用，而对模式而言只有实例才能用代码表示;设计模式是比框架更小的元素，
     一个框架中往往含有一个或多个设计模式，框架总是针对某一特定应用领域，但同一模式却可适用于各种应用。可以说，框架是软件，而设计模式是软件的知识。
3、框架可分为白盒(White-Box)与黑盒(Black-Box)两种框架。
    基于继承的框架被称为白盒框架。所谓白盒即具备可视性，被继承的父类的内部实现细节对子类而言都是可知的。利用白盒框架的应用开发者通过衍生子类或重写父类的成员方法来开发系统。
    子类的实现很大程度上依赖于父类的实现，这种依赖性限制了重用的灵活性和完全性。但解决这种局限性的方法可以是只继承抽象父类，因为抽象类基本上不提供具体的实现。
    白盒框架是一个程序骨架，而用户衍生出的子类是这个骨架上的附属品。
    基于对象构件组装的框架就是黑盒框架。应用开发者通过整理、组装对象来获得系统的实现。用户只须了解构件的外部接口，无须了解内部的具体实现。
    另外，组装比继承更为灵活，它能动态地改变，继承只是一个静态编译时的概念。白盒和黑盒将同时应用于系统的开发中。
4、为什么要用模式？
    因为模式是一种指导，在一个良好的指导下，有助于你完成任务，有助于你作出一个优良的设计方案，达到事半功倍的效果。而且会得到解决问题的最佳办法。
5、软件为什么要分层？
    为了实现“高内聚、低耦合”。把问题划分开来各个解决，易于控制，易于延展，易于分配资源…总之好处很多
6、JAVA三大框架入门： JAVA中常说的三大框架指：SSH，即：Spring、Struts、Hibernate 
    JAVA三大框架用可以用来做WEB应用。Spring是一个全方位的整合框架，Struts 在项目主要起控制作用，只要用于web层（即视图层和控制层），Hibernate应用于数据持久化层，是对JDBC的轻量级封装。
　　Java三大框架的每一个框架都不是孤立的，可以同时与应用到同一个项目开发中。
    Spring：功能强大的组件粘合济，能够将你的所有的java功能模块用配置文件的方式组合起来（还让你感觉不到spring的存在）成为一个完成的应用
    Struts：不说了，大名鼎鼎的功能强大的MVC架构
    Hibernate：强大的ORM工具，然后很方便将数据库记录转化为java的实体实例，将java的实体实例很容易的保存到数据库中，如果你不需要很复杂的数据库访问，利用它你根本就不用了解数据库的细节
   1.Spring
        Spring是功能强大的组件粘合济，可以帮助Java程序员解决许多在J2EE开发中常见的的问题，能够将你的所有的java功能模块用配置文件的方式组合起来成为一个完成的应用；
        spring利用它的IOC和AOP来处理控制业务，负责对数据库的操作。Spring将显卡和CPU组装在一起，相当于电脑的一个主板。
        依赖注入（DI）又称为控制反转（IOC），通常来说，当某个角色需要另一个角色才能正常运行时，通常是由调用者来创建被调用者的实例。但是在Spring框架中，创建被调用者的任务交给了Spring框架。
        面向切片编程（AOP）是面向对象编程（OOP）的延续，AOP中代码的编写顺序不再影响代码的执行顺序，目的是解耦业务代码和公共服务代码（如日志，安全，事务等）。
   2.Struts
        Struts是大名鼎鼎的功能强大的MVC架构，属于开源软件；利用Struts是为了帮助我们减少在运用MVC设计模型来开发Web应用的时间。Struts可以帮助Java程序员混合使用Servlets和JSP的优点来建立可扩展的应用。
        Struts的关键是M(MODEL)-V(VIEW)-C(CONTROL)
        模型（M）：用于封装与业务逻辑相关的数据和数据处理方法。
        视图（V）：用于数据的展现
        控制器（C）：负责相应请求，协调Model和View
   3.Hibernate
        Hibernate 是一个开源代码的对象关系映射框架，是强大的ORM工具，通过mapping的标签来做文件映射，方便将数据库记录转化为java的实体实例，将java的实体实例很容易的保存到数据库中。
        Hibernate负责对数据库的操作，相当于电脑的CPU。
        Hibernate的关键是ORM，即Object Relation Mapping（对象关系映射）。
        ORM 用来把对象模型表示的对象映射到基于SQL的关系模型数据库结构中去。这样使得我们在具体的操作实体对象的时候，不需要再去和复杂的SQL语句打交道，只需简单的操作实体对象的属性和方法。
        ORM技术是在对象和关系之间提供了一条桥梁，前台的对象型数据和数据库中的关系型的数据通过这个桥梁来相互转化 。 
        Hibernate 核心接口一共有5个： 
        分别为:Session、 SessionFactory、Transaction、Query和Configuration。
        Session：负责执行被持久化对象的CRUD操作(CRUD的任务是完成与 数据库的交流，包含了很多常见的SQL语句。（非线程安全）
        SessionFactory：负责初始化Hibernate。它充当数据存储源的代理，并负责创建Session对象。（非轻量级）
        Query：负责执行各种数据库查询。它可以使用HQL语言或SQL语句两种表达方式。
        Transaction：负责事务相关的操作。它是可选的，开发人员也可以设计编写自己的底层事务处理代码。
        Configuration：负责配置并启动Hibernate，创建SessionFactory对象。
    实验楼上的三门课程： 
        Struts框架教程 https://www.shiyanlou.com/courses/32 
        Hibernate框架教程 https://www.shiyanlou.com/courses/34 
        Spring框架入门教程 https://www.shiyanlou.com/courses/578