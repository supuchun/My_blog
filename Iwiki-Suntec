1、编写测试用例时应遵循如下原则：
    测试用例的规模应力求轻快，小巧，以提高代码迭代过程中 ci 的效率
    每个case的执行时间控制在30s以内
    测试用例尽量不要依赖被测类以外的开发代码
    测试用例间严禁有依赖性
    被测代码内有调用其他接口的，请使用 mock 方法

2、mock测试
        就是在测试过程中，对于某些不容易构造或者不容易获取的对象，用一个虚拟的对象来创建以便测试的测试方法。
   mock对象
        这个虚拟的对象就是mock对象。mock对象就是真实对象在调试期间的代替品。
   mock对象使用范畴
        真实对象具有不可确定的行为，产生不可预测的效果（如：股票行情，天气预报）真实对象很难被创建的真实对象的某些行为很难被触发真实对象实际上还不存在的（和其他开发小组或者和新的硬件打交道）等等.
   使用mock对象测试的关键步骤
        使用一个接口来描述这个对象 在产品代码中实现这个接口 在测试代码中实现这个接口 在被测试代码中只是通过接口来引用对象，所以它不知道这个引用的对象是真实对象还是mock对象。
        
3、描述测试中用到的 mock 方法
    当测试时遇到函数返回无法控制或无法预判时，可以使用mock 方法替换被调用函数的返回，从而达到控制代码流程，使程序执行符合测试预期的一种手段。
    mock 分为两种类型，一类是类成员函数的替换，另一类是 C 函数的重写
    对于类成员函数的 mock方法，规则如下：
    命名规则及路径设置
    基础知识
    定义 Mock 类
    使用 mock 获得期望的返回
    对于 C 函数的重写方法，步骤如下：
    定义mock函数(与原函数同名)
    设置是否使用mock函数