														Docker
1:docker环境安装
	1：安装docker： user@XXXX-xxxx:~$ sudo apt-get install docker.io
	2：复制docker文件到本地： 从ftp取得最新的docker，目前最新docker下载地址：ftp://ftp.security.suntec.net/BaseSystem/14_FromTMC/最新日期/ 
	  或docker路径下下载拉取最新docker文件tagl_dev_ext_eb_17p.1.1.tar与tagl_unittest_17p.1.1.tar）
	3：导入docker
		user@XXXX-xxxx:~$ docker load < tagl_dev_ext_23.9.tar
		user@XXXX-xxxx:~$ docker load < tagl_unittest_23.9.tar
	4：导入成功，确认： user@XXXX-xxxx:~$ sudo docker images
	5：创建工作目录： user@XXXX-xxxx:~$ mkdir -p tagl_home/repos
	6：创建一般用户： user@XXXX-xxxx:~$ sudo usermod -aG docker $USER
	7：创建之后请重启: ./tagldev_run_ext_eb.sh -v 17p.1.1 -n tagl -f

2:重启docker（使用脚本创建docker container）
	1：exit
	2：使用脚本创建docker container
	  user@XXXX-xxxx:~$ ./tagldev_run_ext_eb.sh -v 17p.1.1 -n tagl -f
	  Are you sure to remove existing container?[Y/N]
	  输入：Y
		确认成功 (注意以上 脚本执行完毕后会进入docker中，请在本机命令行(docker外)确认 )
		user@XXXX-xxxx:~$ sudo docker ps -a
3:编译UT命令 
	tagldev@33d552e806f6:~$ source /opt/poky/2.1.2/environment-setup-core2-64-poky-linux #设置环境变量
	tagldev@33d552e806f6:~$ SDKTARGETSYSROOT=/opt/poky/2.1.2/sysroots/core2-64-poky-linux #设置环境变量
	tagldev@33d552e806f6:~$ ./make_test
	附加：有时需要拷贝文件： 
			tagldev@33d552e806f6:~$ SDKTARGETSYSROOT/usr/tagl/include/tagl_types_obsoluted.h
			tagldev@33d552e806f6:~$ cp ./nsframework/tagl_types_obsoluted.h $SDKTARGETSYSROOT/usr/tagl/include/tagl_types_obsoluted.h
			tagldev@329017fadc0b:~/nsframework$ cp ./tagl_types_obsoluted.h $SDKTARGETSYSROOT/usr/tagl/include/tagl_types_obsoluted.h
4:运行UT命令 
	方式一：tagldev@296eef4b0f96:~/zjybasesystem/nsframework$ ./run.sh framework_unified/
	方式二：tagldev@82ef571d2b4d:~/nsframework/framework_unified/test/unit/driver$ make run-ut-local
		方式二详细步骤： 1：cd framework_unified/client/
									2：make test
									3：sudo cp libNS_FrameworkUnified.so   /usr/tagl/lib/
									4：cd framework_unified/test/unit/driver
									5：make run-ut-local
		附加:另外开一个docker终端连接到docker，检查测试的文件路径与内容
				（sudo） docker exec -it tagl /bin/bash 或者 docker exec -it tagl_sysroot /bin/bash
				0982a9d7bbe9:~$ ls /tmp/dump.txt 
				0982a9d7bbe9:~$ cat /tmp/dump.txt 

5:CI检查utd文档本地手顺:仓库CI_Script
	CI_Script/script/unittestcase/ut.py -u addtestcase/nsframework/framework_unified/test/unit/test_design_doc -x 
	addtestcase/ramework_unified_dispatcher_test_driver_utresult.xml addtestcase/framework_unified_test_driver_utresult.xml
	xml从CI上下
	eg： CI_Script/script/unittestcase/ut.py -u ./framework_unified/test/unit/test_design_doc/framework_unified_SharedMemHandle_006.xlsx -x 
	addtestcase/framework_unified_ShareMemHandle_test_driver_utresult.xml addtestcase/framework_unified_test_driver_utresult.xml

6：Docker组成
	Docker镜像，查找和浏览所有容器镜像
	Docker服务器端守护进程，管理所有容器
	Docker客户端命令行，控制服务器守护进程
	容器和镜像的唯一区别在于容器的最上层是可读写的，容器=镜像（只读层）+读写层
7：Docker与VM对比
	Server->Host OS-> Hypervisor->Guest OS->Bins/Libs->App
	Server->Host OS-> Docker Engine->Bins/Libs->App